apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: single-arch-build-pipeline
spec:
  tasks:
    - name: init
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: init
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:092c113b614f6551113f17605ae9cb7e822aa704d07f0e37ed209da23ce392cc
          - name: kind
            value: task
      params:
        - name: image-url
          value: "$(params.output-image)"
        - name: rebuild
          value: "$(params.rebuild)"
        - name: skip-checks
          value: "$(params.skip-checks)"
    - name: clone-repository
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: git-clone-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:8e1e861d9564caea3f9ce8d1c62789f5622b5a7051209decc9ecf10b6f54aa71
          - name: kind
            value: task
      when:
        - input: "$(tasks.init.results.build)"
          operator: in
          values:
            - 'true'
      runAfter:
        - init
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.revision)"
        - name: ociStorage
          value: "$(params.output-image).git"
        - name: ociArtifactExpiresAfter
          value: "$(params.image-expires-after)"
      workspaces:
        - name: basic-auth
          workspace: git-auth
    - name: prefetch-dependencies
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: prefetch-dependencies-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.1@sha256:8e2a8de8e8a55a8e657922d5f8303fefa065f7ec2f8a49a666bf749540d63679
          - name: kind
            value: task
      params:
        - name: input
          value: "$(params.prefetch-input)"
        - name: hermetic
          value: "$(params.hermetic)"
        - name: dev-package-managers
          value: $(params.prefetch-dev-package-managers-enabled)
        - name: SOURCE_ARTIFACT
          value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
        - name: ociStorage
          value: $(params.output-image).prefetch
        - name: ociArtifactExpiresAfter
          value: $(params.image-expires-after)
    - name: build-container
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: buildah-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta:0.2@sha256:9762c44a2b4e4d7dcc5f69b7b3dcb53bc233f4c48e2142decc46724c375bacf6
          - name: kind
            value: task
      runAfter:
        - clone-repository
      when:
        - input: "$(tasks.init.results.build)"
          operator: in
          values:
            - 'true'
      params:
        - name: IMAGE
          value: "$(params.output-image)"
        - name: DOCKERFILE
          value: "$(params.dockerfile)"
        - name: CONTEXT
          value: "$(params.path-context)"
        - name: HERMETIC
          value: "$(params.hermetic)"
        - name: PREFETCH_INPUT
          value: "$(params.prefetch-input)"
        - name: IMAGE_EXPIRES_AFTER
          value: "$(params.image-expires-after)"
        - name: COMMIT_SHA
          value: "$(tasks.clone-repository.results.commit)"
        - name: SOURCE_ARTIFACT
          value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
        - name: CACHI2_ARTIFACT
          value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    - name: build-source-image
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: source-build-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta:0.1@sha256:d1fd616413d45bb6af0532352bfa8692c5ca409127e5a2dd4f1bc52aef27d1dc
          - name: kind
            value: task
      when:
        - input: "$(tasks.init.results.build)"
          operator: in
          values:
            - 'true'
        - input: "$(params.build-source-image)"
          operator: in
          values:
            - 'true'
      runAfter:
        - build-container
      params:
        - name: BINARY_IMAGE
          value: "$(params.output-image)"
        - name: SOURCE_ARTIFACT
          value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
        - name: CACHI2_ARTIFACT
          value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    - name: deprecated-base-image-check
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: deprecated-image-check
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.4@sha256:b4f9599f5770ea2e6e4d031224ccc932164c1ecde7f85f68e16e99c98d754003
          - name: kind
            value: task
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values:
            - 'false'
      runAfter:
        - build-container
      params:
        - name: IMAGE_URL
          value: $(tasks.build-container.results.IMAGE_URL)
        - name: IMAGE_DIGEST
          value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: clair-scan
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: clair-scan
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.2@sha256:9f4ddafd599e06b319cece5a4b8ac36b9e7ec46bea378bc6c6af735d3f7f8060
          - name: kind
            value: task
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values:
            - 'false'
      runAfter:
        - build-container
      params:
        - name: image-digest
          value: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - name: image-url
          value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: ecosystem-cert-preflight-checks
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: ecosystem-cert-preflight-checks
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1@sha256:5131cce0f93d0b728c7bcc0d6cee4c61d4c9f67c6d619c627e41e3c9775b497d
          - name: kind
            value: task
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values:
            - 'false'
      runAfter:
        - build-container
      params:
        - name: image-url
          value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: sast-snyk-check
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: sast-snyk-check-oci-ta
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta:0.2@sha256:ad02dd316d68725490f45f23d2b8acf042bf0a80f7a22c28e0cadc6181fc10f1
          - name: kind
            value: task
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values:
            - 'false'
      runAfter:
        - build-container
      params:
        - name: SOURCE_ARTIFACT
          value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
        - name: image-digest
          value: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - name: image-url
          value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: clamav-scan
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: clamav-scan
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1@sha256:5ac9b24cff7cfb391bc54cd5135536892090354862327d1028fa08872d759c03
          - name: kind
            value: task
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values:
            - 'false'
      runAfter:
        - build-container
      params:
        - name: image-digest
          value: "$(tasks.build-container.results.IMAGE_DIGEST)"
        - name: image-url
          value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: sbom-json-check
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: sbom-json-check
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sbom-json-check:0.2@sha256:468b5615993bb6d75df3d66180df5eb8728bbef59efe509eb5ac89b7ac582f16
          - name: kind
            value: task
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values:
            - 'false'
      runAfter:
        - build-container
      params:
        - name: IMAGE_URL
          value: "$(tasks.build-container.results.IMAGE_URL)"
        - name: IMAGE_DIGEST
          value: "$(tasks.build-container.results.IMAGE_DIGEST)"
  params:
    - name: git-url
      type: string
      description: Source Repository URL
    - name: revision
      type: string
      description: Revision of the Source Repository
      default: ''
    - name: output-image
      type: string
      description: Fully Qualified Output Image
    - name: path-context
      type: string
      description: Path to the source code of an application's component from where to
        build image.
      default: "."
    - name: dockerfile
      type: string
      description: Path to the Dockerfile inside the context specified by parameter path-context
      default: Dockerfile
    - name: rebuild
      type: string
      description: Force rebuild image
      default: 'false'
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ''
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: "false"
      description: Enable dev-package-managers in prefetch task
      name: prefetch-dev-package-managers-enabled
      type: string
    - name: java
      type: string
      description: Java build
      default: 'false'
    - name: image-expires-after
      description: Image tag expiration time, time values could be something like 1h,
        2d, 3w for hours, days, and weeks, respectively.
      default: ''
    - name: build-source-image
      type: string
      description: Build a source image.
      default: 'false'
  workspaces:
    - name: git-auth
      optional: true
  results:
    - name: IMAGE_URL
      description: ''
      value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: IMAGE_DIGEST
      description: ''
      value: "$(tasks.build-container.results.IMAGE_DIGEST)"
    - name: CHAINS-GIT_URL
      description: ''
      value: "$(tasks.clone-repository.results.url)"
    - name: CHAINS-GIT_COMMIT
      description: ''
      value: "$(tasks.clone-repository.results.commit)"
  finally:
    - name: show-sbom
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: show-sbom
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:9bfc6b99ef038800fe131d7b45ff3cd4da3a415dd536f7c657b3527b01c4a13b
          - name: kind
            value: task
      params:
        - name: IMAGE_URL
          value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: show-summary
      taskRef:
        resolver: bundles
        params:
          - name: name
            value: summary
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:d97c04ab42f277b1103eb6f3a053b247849f4f5b3237ea302a8ecada3b24e15b
          - name: kind
            value: task
      params:
        - name: pipelinerun-name
          value: "$(context.pipelineRun.name)"
        - name: git-url
          value: "$(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)"
        - name: image-url
          value: "$(params.output-image)"
        - name: build-task-status
          value: "$(tasks.build-container.status)"